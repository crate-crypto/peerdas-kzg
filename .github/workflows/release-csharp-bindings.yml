name: Publish C# bindings

on:
  workflow_dispatch:
    inputs:
      ref:
        description: The reference (branch/tag/commit) to checkout
        required: true

jobs:
  publish:
    name: Publish C# bindings
    runs-on: macos-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.74.1

      - name: Install all of the relevant targets
        run: |
          chmod x .github/scripts/install_all_targets.sh
          .github/scripts/install_all_targets.sh

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: Install mingw-w64 for Windows cross-compilation
        run: |
          brew install mingw-w64
      
      - name: Install linker for x86_64-unknown-linux-gnu
        run: |
          brew install SergioBenitez/osxct/x86_64-unknown-linux-gnu
    
      - name: Install linker for aarch64-unknown-linux-gnu
        run: |
          brew tap messense/homebrew-macos-cross-toolchains
          brew install aarch64-unknown-linux-gnu

      - name: Rename cross.toml file so cargo uses the correct linkers
        run: |
          mv .cargo/config.cross.toml .cargo/config.toml

      - name: Strip leading v from tagged version
      # Strip the leading v from the tag name. It should be of the form v0.1.2
      # dotnet requires it to be of the form 0.1.2
        run: echo "VERSION=$(echo "${{ inputs.ref }}" | sed 's/^v//')" >> $GITHUB_ENV

      - name: Run compile script
        run: |
          chmod +x .github/scripts/compile_all_targets_c_sharp.sh
          .github/scripts/compile_all_targets_c_sharp.sh

      - name: Restore NuGet packages
        working-directory: bindings/csharp/csharp_code/PeerDASKZG.bindings
        run: dotnet restore

      - name: Package with dotnet pack
        working-directory: bindings/csharp/csharp_code/PeerDASKZG.bindings
        run: dotnet pack -c release --no-restore -o nupkgs -p:Version=${{ env.VERSION }} -p:ContinuousIntegrationBuild=true
        
      - name: Publish to Nuget
        working-directory: bindings/csharp/csharp_code/PeerDASKZG.bindings
        run: dotnet nuget push nupkgs/*.nupkg --api-key ${{ secrets.NUGET_RELEASE_TOKEN }} --source https://api.nuget.org/v3/index.json
