/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const BYTES_PER_CELL: number
export const BYTES_PER_COMMITMENT: number
export const BYTES_PER_FIELD_ELEMENT: number
export const FIELD_ELEMENTS_PER_BLOB: number
export const FIELD_ELEMENTS_PER_CELL: number
export const BYTES_PER_BLOB: number
export class CellsAndProofs {
  cells: Array<Uint8Array>
  proofs: Array<Uint8Array>
}
export class ProverContextJs {
  constructor()
  blobToKzgCommitment(blob: Uint8Array): Uint8Array
  asyncBlobToKzgCommitment(blob: Uint8Array): Promise<Uint8Array>
  computeCellsAndKzgProofs(blob: Uint8Array): CellsAndProofs
  asyncComputeCellsAndKzgProofs(blob: Uint8Array): Promise<CellsAndProofs>
  computeCells(blob: Uint8Array): Array<Uint8Array>
  asyncComputeCells(blob: Uint8Array): Promise<Array<Uint8Array>>
}
export class VerifierContextJs {
  constructor()
  verifyCellKzgProof(commitment: Uint8Array, cellId: bigint, cell: Uint8Array, proof: Uint8Array): boolean
  asyncVerifyCellKzgProof(commitment: Uint8Array, cellId: bigint, cell: Uint8Array, proof: Uint8Array): Promise<boolean>
  verifyCellKzgProofBatch(commitments: Array<Uint8Array>, rowIndices: Array<bigint>, columnIndices: Array<bigint>, cells: Array<Uint8Array>, proofs: Array<Uint8Array>): boolean
  asyncVerifyCellKzgProofBatch(commitments: Array<Uint8Array>, rowIndices: Array<bigint>, columnIndices: Array<bigint>, cells: Array<Uint8Array>, proofs: Array<Uint8Array>): Promise<boolean>
  recoverAllCells(cellIds: Array<bigint>, cells: Array<Uint8Array>): Array<Uint8Array>
  asyncRecoverAllCells(cellIds: Array<bigint>, cells: Array<Uint8Array>): Promise<Array<Uint8Array>>
}
